[{"path":"/articles/clarabel.html","id":"introduction","dir":"Articles","previous_headings":"","what":"Introduction","title":"Clarabel Solver Examples","text":"examples original Clarabel documentation.","code":""},{"path":"/articles/clarabel.html","id":"basic-quadratic-program-example","dir":"Articles","previous_headings":"","what":"1. Basic Quadratic Program Example","title":"Clarabel Solver Examples","text":"Suppose want solve following 2-dimensional quadratic programming problem: \\[ \\begin{array}{ll} \\text{minimize} &  3x_1^2 + 2x_2^2 - x_1 - 4x_2\\\\ \\text{subject } &  -1 \\leq x \\leq 1, ~ x_1 = 2x_2 \\end{array} \\] show solve problem using Clarabel R. first step put problem data standard form expected solver.","code":""},{"path":"/articles/clarabel.html","id":"objective-function","dir":"Articles","previous_headings":"1. Basic Quadratic Program Example","what":"1.1. Objective function","title":"Clarabel Solver Examples","text":"Clarabel solver’s default configuration expects problem data form \\(\\frac{1}{2}x^\\top P x + q^\\top x\\). therefore define objective function data \\[ P = 2 \\cdot \\begin{bmatrix} 3 & 0 \\\\ 0 & 2\\end{bmatrix} \\mbox{ } q = \\begin{bmatrix} -1 \\\\ -4\\end{bmatrix}. \\]","code":""},{"path":"/articles/clarabel.html","id":"constraints","dir":"Articles","previous_headings":"1. Basic Quadratic Program Example","what":"1.2. Constraints","title":"Clarabel Solver Examples","text":"solver’s default configuration expects constraints form \\(Ax + s = b\\), \\(s \\\\mathcal{K}\\) composite cone \\(\\mathcal{K}\\). 1 equality constraint 4 inequalities, require first element \\(s\\) zero (.e. first constraint correspond equality) elements \\(s_i \\ge 0\\). cone constraint \\(s\\) therefore \\[ s \\\\mathcal K = \\{0\\}^1 \\times \\mathbb{R}^4_{\\ge 0}. \\] Define constraint data \\[ = \\begin{bmatrix} 1 & -2 \\\\ 1 & 0 \\\\ 0 & 1 \\\\ -1 & 0 \\\\ 0 & -1\\end{bmatrix} \\mbox{ } b=\\begin{bmatrix} 0 \\\\ 1 \\\\ 1 \\\\ 1 \\\\ 1 \\end{bmatrix}. \\] Note Clarabel expects inputs Compressed Sparse Column (CSC) format \\(P\\) \\(\\) try convert .","code":""},{"path":"/articles/clarabel.html","id":"solution","dir":"Articles","previous_headings":"1. Basic Quadratic Program Example","what":"1.3. Solution","title":"Clarabel Solver Examples","text":"","code":"P <- Matrix::Matrix(2 * c(3, 0, 0, 2), nrow = 2, ncol = 2, sparse = TRUE) P <- as(P, \"symmetricMatrix\")  # P needs to be a symmetric matrix q <- c(-1, -4) A <- Matrix::Matrix(c(1, 1, 0, -1, 0, -2, 0, 1, 0, -1), ncol = 2, sparse = TRUE) b <- c(0, 1, 1, 1, 1) cones <- c(z = 1L, l = 4L)  ## 1 equality and 4 inequalities, in order s <- clarabel(A = A, b = b, q = q, P = P, cones = cones) cat(sprintf(\"Solution status, description: = (%d, %s)\\n\",             s$status, solver_status_descriptions()[s$status])) #> Solution status, description: = (2, Solver terminated with a solution.) cat(sprintf(\"Solution: (x1, x2) = (%f, %f)\\n\", s$x[1], s$x[2])) #> Solution: (x1, x2) = (0.428571, 0.214286)"},{"path":"/articles/clarabel.html","id":"basic-socp-example","dir":"Articles","previous_headings":"1. Basic Quadratic Program Example","what":"2. Basic SOCP Example","title":"Clarabel Solver Examples","text":"want solve following 2-dimensional optimization problem: \\[ \\begin{array}{ll} \\text{minimize} & x_2^2\\\\[2ex] \\text{subject } &  \\left\\|\\begin{pmatrix} 2x_1 \\\\ x_2 \\end{pmatrix} - \\begin{pmatrix} 2 \\\\ 2 \\end{pmatrix}\\right\\|_2 \\le 1 \\end{array} \\]","code":""},{"path":"/articles/clarabel.html","id":"objective-function-1","dir":"Articles","previous_headings":"1. Basic Quadratic Program Example","what":"2.1. Objective function","title":"Clarabel Solver Examples","text":"Clarabel solver’s default configuration expects problem data form \\(\\frac{1}{2}x^\\top P x + q^\\top x\\). therefore define objective function data \\[ P = 2 \\cdot \\begin{bmatrix} 0 & 0 \\\\ 0 & 1\\end{bmatrix} \\mbox{ } q = \\begin{bmatrix} 0 \\\\ 0\\end{bmatrix}. \\]","code":""},{"path":"/articles/clarabel.html","id":"constraints-1","dir":"Articles","previous_headings":"1. Basic Quadratic Program Example","what":"2.2. Constraints","title":"Clarabel Solver Examples","text":"solver’s default configuration expects constraints form \\(Ax + s = b\\), \\(s \\\\mathcal{K}\\) composite cone \\(\\mathcal{K}\\). single constraint 2-norm vector, rewrite \\[ \\left\\|\\begin{pmatrix} 2x_1 \\\\ x_2 \\end{pmatrix} - \\begin{pmatrix} 2 \\\\ 2 \\end{pmatrix}\\right\\|_2 \\le 1 \\quad \\Longleftrightarrow \\quad \\begin{pmatrix} 1 \\\\ 2x_1 - 2\\\\ x_2 - 2 \\end{pmatrix} \\\\mathcal{K}_{SOC} \\] puts constraint form \\(b - Ax \\\\mathcal{K}_{SOC}\\).","code":""},{"path":"/articles/clarabel.html","id":"solution-1","dir":"Articles","previous_headings":"1. Basic Quadratic Program Example","what":"2.3. Solution","title":"Clarabel Solver Examples","text":"","code":"P <- Matrix::Matrix(2 * c(0, 0, 0, 1), nrow = 2, ncol = 2, sparse = TRUE) P <- as(P, \"symmetricMatrix\") # P needs to be a symmetric matrix q <- c(0, 0) A <- Matrix::Matrix(c(0, -2.0, 0, 0, 0, 1.0), nrow = 3, ncol = 2, sparse = TRUE) b <- c(1, -2, -2) cones <- c(q = 3L) s <- clarabel(A = A, b = b, q = q, P = P, cones = cones) cat(sprintf(\"Solution status, description: = (%d, %s)\\n\",             s$status, solver_status_descriptions()[s$status])) #> Solution status, description: = (2, Solver terminated with a solution.) cat(sprintf(\"Solution (x1, x2) = (%f, %f)\\n\", s$x[1], s$x[2])) #> Solution (x1, x2) = (1.000000, -1.000000)"},{"path":"/articles/clarabel.html","id":"control-parameters","dir":"Articles","previous_headings":"","what":"3. Control parameters","title":"Clarabel Solver Examples","text":"Clarabel number parameters control behavior, including verbosity, time limits, tolerances; see help clarabel_control(). example, last problem, can reduce number iterations. Note different status, always checked code.","code":"P <- Matrix::Matrix(2 * c(0, 0, 0, 1), nrow = 2, ncol = 2, sparse = TRUE) P <- as(P, \"symmetricMatrix\") # P needs to be a symmetric matrix q <- c(0, 0) A <- Matrix::Matrix(c(0, -2.0, 0, 0, 0, 1.0), nrow = 3, ncol = 2, sparse = TRUE) b <- c(1, -2, -2) cones <- c(q = 3L) s <- clarabel(A = A, b = b, q = q, P = P, cones = cones,               control = list(max_iter = 3)) ## Reduced number of iterations cat(sprintf(\"Solution status, description: = (%d, %s)\\n\",             s$status, solver_status_descriptions()[s$status])) #> Solution status, description: = (5, Solver terminated with a solution (reduced accuracy)) cat(sprintf(\"Solution (x1, x2) = (%f, %f)\\n\", s$x[1], s$x[2])) #> Solution (x1, x2) = (1.000000, -0.999999)"},{"path":"/authors.html","id":null,"dir":"","previous_headings":"","what":"Authors","title":"Authors and Citation","text":"Balasubramanian Narasimhan. Author, maintainer. Paul Goulart. Author, copyright holder. Yuwhen Chen. Author.","code":""},{"path":"/authors.html","id":"citation","dir":"","previous_headings":"","what":"Citation","title":"Authors and Citation","text":"Narasimhan B, Goulart P, Chen Y (2023). clarabel: Interior Point Conic Optimization Solver. R package version 0.1.0.","code":"@Manual{,   title = {clarabel: Interior Point Conic Optimization Solver},   author = {Balasubramanian Narasimhan and Paul Goulart and Yuwhen Chen},   year = {2023},   note = {R package version 0.1.0}, }"},{"path":"/index.html","id":"clarabel","dir":"","previous_headings":"","what":"Interior Point Conic Optimization Solver","title":"Interior Point Conic Optimization Solver","text":"R interface Clarabel interior point conic optimization solver Oxford Control Group. gets CRAN, binaries provided various platforms, one can install via: code assumes availabiliy Cargo/Rust infrastructure R compilation tools install source, freely available. Examples code run (now) may found .","code":"## Install remotes packages if not available if (! \"remotes\" %in% installed.packages()[, 1] ) {     install.packages(\"remotes\", repository = \"https://cran.r-project.org\") } remotes::install_github(\"bnaras/clarabel\")"},{"path":"/reference/clarabel-package.html","id":null,"dir":"Reference","previous_headings":"","what":"Clarabel provides an interface to clarabel solver implemented in Rust. — clarabel-package","title":"Clarabel provides an interface to clarabel solver implemented in Rust. — clarabel-package","text":"Clarabel versatile interior point solver convex programs using new homogeneous embedding. solves solves linear programs (LPs), quadratic programs (QPs), second-order cone programs (SOCPs), problems exponential power cone constraints. quadratic objectives, unlike interior point solvers based standard homogeneous self-dual embedding (HSDE) model, Clarabel handles quadratic objective without requiring epigraphical reformulation objective function. can therefore significantly faster HSDE-based solvers problems quadratic objective functions. Infeasible problems detected using using homogeneous embedding technique. See https://oxfordcontrol.github.io/ClarabelDocs/stable/.","code":""},{"path":"/reference/clarabel-package.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Clarabel provides an interface to clarabel solver implemented in Rust. — clarabel-package","text":"Balasubramanian Narasimhan, Paul Goulart, Yuwen Chen","code":""},{"path":"/reference/clarabel.html","id":null,"dir":"Reference","previous_headings":"","what":"Clarabel - Interior point conic solver — clarabel","title":"Clarabel - Interior point conic solver — clarabel","text":"Solves convex cone programs using interior point method. specific problem solved : Minimize $$\\frac{1}{2}x^TPx + q^Tx$$ subject $$Ax + s = b$$ $$s \\K$$ \\(x \\R^n\\), \\(s \\R^m\\), \\(P =   P^T\\) nonnegative-definite, \\(q \\R^n\\), \\(\\  R^{m\\times n}\\), \\(b \\R^m\\). set \\(K\\) composition convex cones.","code":""},{"path":"/reference/clarabel.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Clarabel - Interior point conic solver — clarabel","text":"","code":"clarabel(A, b, q, P = NULL, cones, control = list(), strict_cone_order = TRUE)"},{"path":"/reference/clarabel.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Clarabel - Interior point conic solver — clarabel","text":"matrix constraint coefficients. b numeric vector giving primal constraints q numeric vector giving primal objective P symmetric positive semidefinite matrix, default NULL cones named list giving cone sizes, see “Cone Parameters” specification control list giving specific control parameters use place default values, empty list indicating default control parameters. Specified parameters correctly named typed avoid Rust system panics sanitization done efficiency reasons strict_cone_order logical flag, default TRUE forcing order cones described . FALSE cones can specified order even repeated directly passed solver without type length checks","code":""},{"path":"/reference/clarabel.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Clarabel - Interior point conic solver — clarabel","text":"named list solution vectors x, y, s information run","code":""},{"path":"/reference/clarabel.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Clarabel - Interior point conic solver — clarabel","text":"order rows matrix \\(\\) correspond order given table “Cone Parameters”, means means rows corresponding primal zero cones first, rows corresponding non-negative cones second, rows corresponding second-order cone third, rows corresponding exponential cones fourth rows corresponding power cones last.","code":""},{"path":"/reference/clarabel.html","id":"clarabel-can-solve","dir":"Reference","previous_headings":"","what":"Clarabel can solve","title":"Clarabel - Interior point conic solver — clarabel","text":"linear programs (LPs) second-order cone programs (SOCPs) exponential cone programs (ECPs) power cone programs (PCPs) problems combination cones, defined parameters listed “Cone Parameters” ","code":""},{"path":"/reference/clarabel.html","id":"cone-parameters","dir":"Reference","previous_headings":"","what":"Cone Parameters","title":"Clarabel - Interior point conic solver — clarabel","text":"table shows cone parameter specifications","code":""},{"path":[]},{"path":"/reference/clarabel.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Clarabel - Interior point conic solver — clarabel","text":"","code":"A <- matrix(c(1, 1), ncol = 1) b <- c(1, 1) obj <- 1 cone <- list(z = 2L) control <- clarabel_control(tol_gap_rel = 1e-7, tol_gap_abs = 1e-7, max_iter = 100) clarabel(A = A, b = b, q = obj, cones = cone, control = control) #> $x #> [1] 1 #>  #> $z #> [1] -0.5 -0.5 #>  #> $s #> [1] 0 0 #>  #> $obj_val #> [1] 1 #>  #> $status #> [1] 2 #>  #> $solve_time #> [1] 7.7415e-05 #>  #> $iterations #> [1] 3 #>  #> $r_prim #> [1] 0 #>  #> $r_dual #> [1] 0 #>"},{"path":"/reference/clarabel_control.html","id":null,"dir":"Reference","previous_headings":"","what":"Clarabel control parameters with default values and types in parenthesis — clarabel_control","title":"Clarabel control parameters with default values and types in parenthesis — clarabel_control","text":"Clarabel control parameters default values types parenthesis","code":""},{"path":"/reference/clarabel_control.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Clarabel control parameters with default values and types in parenthesis — clarabel_control","text":"","code":"clarabel_control(   max_iter = 200L,   time_limit = Inf,   verbose = TRUE,   max_step_fraction = 0.99,   tol_gap_abs = 1e-08,   tol_gap_rel = 1e-08,   tol_feas = 1e-08,   tol_infeas_abs = 1e-08,   tol_infeas_rel = 1e-08,   tol_ktratio = 1e-06,   reduced_tol_gap_abs = 5e-05,   reduced_tol_gap_rel = 5e-05,   reduced_tol_feas = 1e-04,   reduced_tol_infeas_abs = 5e-05,   reduced_tol_infeas_rel = 5e-05,   reduced_tol_ktratio = 1e-04,   equilibrate_enable = TRUE,   equilibrate_max_iter = 10L,   equilibrate_min_scaling = 1e-04,   equilibrate_max_scaling = 10000,   linesearch_backtrack_step = 0.8,   min_switch_step_length = 0.1,   min_terminate_step_length = 1e-04,   direct_kkt_solver = TRUE,   direct_solve_method = c(\"qdldl\", \"mkl\", \"cholmod\"),   static_regularization_enable = TRUE,   static_regularization_constant = 1e-08,   static_regularization_proportional = .Machine$double.eps * .Machine$double.eps,   dynamic_regularization_enable = TRUE,   dynamic_regularization_eps = 1e-13,   dynamic_regularization_delta = 2e-07,   iterative_refinement_enable = TRUE,   iterative_refinement_reltol = 1e-13,   iterative_refinement_abstol = 1e-12,   iterative_refinement_max_iter = 10L,   iterative_refinement_stop_ratio = 5,   presolve_enable = TRUE )"},{"path":"/reference/clarabel_control.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Clarabel control parameters with default values and types in parenthesis — clarabel_control","text":"max_iter maximum number iterations (200L) time_limit maximum run time (seconds) (Inf) verbose verbose printing (TRUE) max_step_fraction maximum interior point step length (0.99) tol_gap_abs absolute duality gap tolerance (1e-8) tol_gap_rel relative duality gap tolerance (1e-8) tol_feas feasibility check tolerance (primal dual) (1e-8) tol_infeas_abs absolute infeasibility tolerance (primal dual) (1e-8) tol_infeas_rel relative infeasibility tolerance (primal dual) (1e-8) tol_ktratio KT tolerance (1e-7) reduced_tol_gap_abs reduced absolute duality gap tolerance (5e-5) reduced_tol_gap_rel reduced relative duality gap tolerance (5e-5) reduced_tol_feas reduced feasibility check tolerance (primal dual) (1e-4) reduced_tol_infeas_abs reduced absolute infeasibility tolerance (primal dual) (5e-5) reduced_tol_infeas_rel reduced relative infeasibility tolerance (primal dual) (5e-5) reduced_tol_ktratio reduced KT tolerance (1e-4) equilibrate_enable enable data equilibration pre-scaling (TRUE) equilibrate_max_iter maximum equilibration scaling iterations (10L) equilibrate_min_scaling minimum equilibration scaling allowed (1e-4) equilibrate_max_scaling maximum equilibration scaling allowed (1e+4) linesearch_backtrack_step linesearch backtracking (0.8) min_switch_step_length minimum step size allowed asymmetric cones PrimalDual scaling (1e-1) min_terminate_step_length minimum step size allowed symmetric cones && asymmetric cones Dual scaling (1e-4) direct_kkt_solver use direct linear solver method (required true) (TRUE) direct_solve_method direct linear solver (\"qdldl\", \"mkl\" \"cholmod\") (\"qdldl\") static_regularization_enable enable KKT static regularization (TRUE) static_regularization_constant KKT static regularization parameter (1e-8) static_regularization_proportional additional regularization parameter w.r.t. maximum abs diagonal term (.Machine.double_eps^2) dynamic_regularization_enable enable KKT dynamic regularization (TRUE) dynamic_regularization_eps KKT dynamic regularization threshold (1e-13) dynamic_regularization_delta KKT dynamic regularization shift (2e-7) iterative_refinement_enable KKT solve iterative refinement (TRUE) iterative_refinement_reltol iterative refinement relative tolerance (1e-12) iterative_refinement_abstol iterative refinement absolute tolerance (1e-12) iterative_refinement_max_iter iterative refinement maximum iterations (10L) iterative_refinement_stop_ratio iterative refinement stalling tolerance (5.0) presolve_enable whether enable presolvle (TRUE)","code":""},{"path":"/reference/clarabel_control.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Clarabel control parameters with default values and types in parenthesis — clarabel_control","text":"list containing control parameters.","code":""},{"path":"/reference/sanitize_cone_spec.html","id":null,"dir":"Reference","previous_headings":"","what":"Sanitize cone specifications — sanitize_cone_spec","title":"Sanitize cone specifications — sanitize_cone_spec","text":"Sanitize cone specifications","code":""},{"path":"/reference/sanitize_cone_spec.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Sanitize cone specifications — sanitize_cone_spec","text":"","code":"sanitize_cone_spec(cone_spec)"},{"path":"/reference/sanitize_cone_spec.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Sanitize cone specifications — sanitize_cone_spec","text":"cone_spec list cone specifications","code":""},{"path":"/reference/sanitize_cone_spec.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Sanitize cone specifications — sanitize_cone_spec","text":"sanitized cone specifications","code":""},{"path":"/reference/solver_status_descriptions.html","id":null,"dir":"Reference","previous_headings":"","what":"Return the solver status description as a named character vector — solver_status_descriptions","title":"Return the solver status description as a named character vector — solver_status_descriptions","text":"Return solver status description named character vector","code":""},{"path":"/reference/solver_status_descriptions.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Return the solver status description as a named character vector — solver_status_descriptions","text":"","code":"solver_status_descriptions()"},{"path":"/reference/solver_status_descriptions.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Return the solver status description as a named character vector — solver_status_descriptions","text":"named list solver status descriptions, order status codes returned solver","code":""},{"path":"/reference/solver_status_descriptions.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Return the solver status description as a named character vector — solver_status_descriptions","text":"","code":"solver_status_descriptions()[2] ## for solved problem #>                               Solved  #> \"Solver terminated with a solution.\"  solver_status_descriptions()[8] ## for max iterations limit reached #>                                                                MaxIterations  #> \"Iteration limit reached before solution or infeasibility certificate found\""}]
